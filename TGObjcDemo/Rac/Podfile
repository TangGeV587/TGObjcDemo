use_frameworks!
inhibit_all_warnings!

source 'https://code.aliyun.com/ecarx-ios/eCarxOpenSpecs.git'
source 'https://code.aliyun.com/ecarx-open/spec-binary.git'
source 'https://gitlab.geely.com/p-admp/iOS-sw-spec/ios-admpspecs.git'
source 'https://github.com/aliyun/aliyun-specs.git'
source 'https://github.com/CocoaPods/Specs.git'
#source 'https://gitee.com/sweetApp/cocoapods-specs.git'
source 'https://gitlab.geely.com/F-ADMP-repository/specs'
source 'http://git.haohanpower.tech/iospublic/hhspecrepo.git'
source 'https://github.com/volcengine/volcengine-specs.git'


platform :ios, '11.0'


target "CarWidgetExtension" do
  pod 'GLServiceSDK', '3.4.2'
  pod 'TspEdgeIOVSDK', '3.5.0'
  pod 'SWNetworkKit'
end

target 'GeelyLynkco' do
  #其他
  pod 'SensorsAnalyticsSDK', '4.2.1'
  pod 'WeexSDK', :git => 'https://gitee.com/sweetApp/incubator-weex.git'
  pod 'EcarxWatchSDK', :git => 'https://gitlab.com/itrealm/EcarxWatchSDK.git', :tag => '0.4.0'
  

#业务模块
 pod 'GeelyLynkcoLogin', :path => '../sw_modules/GeelyLynkcoLogin'
 pod 'GeelyLynkcoMain', :path => '../sw_modules/GeelyLynkcoMain'
 pod 'GeelyLynkcoCarNetwork', :path => '../sw_modules/GeelyLynkcoCarNetwork'
 pod 'GeelyLynkcoCarService', :path => '../sw_modules/GeelyLynkcoCarService'
# pod 'GeelyLynkcoDVR', :path => '../sw_modules/GeelyLynkcoDVR'
 pod 'GeelyLynkcoThird', :path => '../sw_modules/GeelyLynkcoThird'
 pod 'GeelyLynkcoPlugin', :path => '../sw_modules/GeelyLynkcoPlugin'
 pod 'iOS-LynkCoIM', :path => '../sw_modules/iOS-LynkCoIM'
 pod 'LynkCoRPAModule', :path => '../sw_modules/LynkCoRPAModule'
 pod 'GLUnlockOfflineKit', :path => '../sw_modules/GLUnlockOfflineKit'
#公共模块

 pod 'SWFramework'
 pod 'SWDebugMapp'
 pod 'SWUIKit'
 pod 'SWNetworkKit'
 pod 'SWDefaultService'
 pod 'SWWeexKit'
 pod 'SWCordovaKit'
 pod 'SWCordovaDefaultPlugins'
 pod 'SWWeexDefaultPlugins'
 pod 'SWWebComponent'
 pod 'SWLogManager'
 pod 'SWAdvertiseMapp'
 pod 'SWSocialKit'
 pod 'SWAppletService'
 pod 'SWImageTools'
 pod 'SWCompatible'
      
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['ENABLE_BITCODE'] = 'NO'
 
    end
  end
end
      
end
